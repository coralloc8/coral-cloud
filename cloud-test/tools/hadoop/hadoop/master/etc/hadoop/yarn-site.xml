<?xml version="1.0"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->
<configuration>

    <!-- Site specific YARN configuration properties -->

    <!-- 每个节点可以内存，单位MB。默认8182MB -->
    <property>
        <name>yarn.shceduler.maximum-allocation-mb</name>
        <value>2048</value>
    </property>
    <property>
        <name>yarn.nodemanager.vmem-check-enabled</name>
        <value>false</value>
        <description>阻止磁盘检查</description>
    </property>

    <!-- 开启RM高可用 -->
    <property>
        <name>yarn.resourcemanager.ha.enabled</name>
        <value>true</value>
    </property>

    <!-- 启用自动恢复 -->
    <property>
        <name>yarn.resourcemanager.recovery.enabled</name>
        <value>true</value>
    </property>


    <!-- 制定resourcemanager的状态信息存储在zookeeper集群上 -->
    <property>
        <name>yarn.resourcemanager.store.class</name>
        <value>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore</value>
    </property>
    <property>
        <name>yarn.application.classpath</name>
        <value>
            /data/tools/hadoop/hadoop-3.3.1/etc/hadoop,
            /data/tools/hadoop/hadoop-3.3.1/share/hadoop/common/lib/*,
            /data/tools/hadoop/hadoop-3.3.1/share/hadoop/common/*,
            /data/tools/hadoop/hadoop-3.3.1/share/hadoop/hdfs,
            /data/tools/hadoop/hadoop-3.3.1/share/hadoop/hdfs/lib/*,
            /data/tools/hadoop/hadoop-3.3.1/share/hadoop/hdfs/*,
            /data/tools/hadoop/hadoop-3.3.1/share/hadoop/mapreduce/*,
            /data/tools/hadoop/hadoop-3.3.1/share/hadoop/yarn,
            /data/tools/hadoop/hadoop-3.3.1/share/hadoop/yarn/lib/*,
            /data/tools/hadoop/hadoop-3.3.1/share/hadoop/yarn/*
        </value>
    </property>


    <!-- 指定RM的cluster id -->
    <property>
        <name>yarn.resourcemanager.cluster-id</name>
        <value>yrc</value>
    </property>

    <!-- 指定RM的名字 -->
    <property>
        <name>yarn.resourcemanager.ha.rm-ids</name>
        <value>rm1,rm2</value>
    </property>

    <!-- 分别指定RM的地址 -->
    <property>
        <name>yarn.resourcemanager.hostname.rm1</name>
        <value>sfserver-dev</value>
    </property>
    <!--配置外部端口-->
    <property>
        <name>yarn.resourcemanager.scheduler.address.rm1</name>
        <value>sfserver-dev:8030</value>
        <description>yarn对applicationmaster服务的端口</description>
    </property>
    <property>
        <name>yarn.resourcemanager.resource-tracker.address.rm1</name>
        <value>sfserver-dev:8031</value>
        <description>yarn对nodemanager服务的地址</description>
    </property>
    <property>
        <name>yarn.resourcemanager.address.rm1</name>
        <value>sfserver-dev:8032</value>
        <description>yarn对客户端服务的端口</description>
    </property>
    <property>
        <name>yarn.resourcemanager.admin.address.rm1</name>
        <value>sfserver-dev:8033</value>
        <description>yarn对管理员服务的地址</description>
    </property>
    <property>
        <name>yarn.resourcemanager.webapp.address.rm1</name>
        <value>sfserver-dev:8088</value>
    </property>

    <property>
        <name>yarn.resourcemanager.hostname.rm2</name>
        <value>sfserver</value>
    </property>
    <property>
        <name>yarn.resourcemanager.scheduler.address.rm2</name>
        <value>sfserver:8030</value>
        <description>yarn对applicationmaster服务的端口</description>
    </property>
    <property>
        <name>yarn.resourcemanager.resource-tracker.address.rm2</name>
        <value>sfserver:8031</value>
        <description>yarn对nodemanager服务的地址</description>
    </property>
    <property>
        <name>yarn.resourcemanager.address.rm2</name>
        <value>sfserver:8032</value>
        <description>yarn对客户端服务的端口</description>
    </property>
    <property>
        <name>yarn.resourcemanager.admin.address.rm2</name>
        <value>sfserver:8033</value>
        <description>yarn对管理员服务的地址</description>
    </property>
    <property>
        <name>yarn.resourcemanager.webapp.address.rm2</name>
        <value>sfserver:8088</value>
    </property>

    <!-- 指定zk集群地址 -->
    <property>
        <name>yarn.resourcemanager.zk-address</name>
        <value>sfserver-dev:2181,sfserver:2181,ywzfz:2181</value>
    </property>

    <property>
        <name>yarn.nodemanager.aux-services</name>
        <value>mapreduce_shuffle</value>
    </property>
    <!--是否启动一个线程检查每个任务正使用的物理内存量，如果任务超出分配值，则直接将其杀掉，默认是true -->
    <property>
        <name>yarn.nodemanager.pmem-check-enabled</name>
        <value>false</value>
    </property>

    <!--是否启动一个线程检查每个任务正使用的虚拟内存量，如果任务超出分配值，则直接将其杀掉，默认是true -->
    <property>
        <name>yarn.nodemanager.vmem-check-enabled</name>
        <value>false</value>
    </property>

    <!--  执行结束后收集（聚合）各个container本地的日志 -->
    <property>
        <name>yarn.log-aggregation-enable</name>
        <value>true</value>
    </property>

    <property>
        <!--hdfs上的日志保留时间-->
        <name>yarn.log-aggregation.retain-seconds</name>
        <value>106800</value>
    </property>


    <property>
        <name>yarn.nodemanager.local-dirs</name>
        <value>/data/tools/hadoop/data/yarn/local</value>
    </property>

    <property>
        <name>yarn.nodemanager.log-dirs</name>
        <value>/data/tools/hadoop/data/yarn/log</value>
    </property>

    <property>
        <!--应用执行完日志保留的时间，默认0，即执行完立刻删除-->
        <name>yarn.nodemanager.delete.debug-delay-sec</name>
        <value>0</value>
    </property>

    <!-- 指定log所在节点 -->
    <property>
        <name>yarn.log.server.url</name>
        <value>http://sfserver-dev:19888/jobhistory/logs</value>
    </property>


</configuration>
